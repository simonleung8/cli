// This file was generated by counterfeiter
package space_fakes

import (
	"sync"

	"github.com/cloudfoundry-incubator/diego-ssh/cf-plugin/models/space"
)

type FakeSpaceFactory struct {
	GetStub        func(string) (space.Space, error)
	getMutex       sync.RWMutex
	getArgsForCall []struct {
		arg1 string
	}
	getReturns struct {
		result1 space.Space
		result2 error
	}
	SetBoolStub        func(aSpace space.Space, key string, value bool) error
	setBoolMutex       sync.RWMutex
	setBoolArgsForCall []struct {
		aSpace space.Space
		key    string
		value  bool
	}
	setBoolReturns struct {
		result1 error
	}
}

func (fake *FakeSpaceFactory) Get(arg1 string) (space.Space, error) {
	fake.getMutex.Lock()
	fake.getArgsForCall = append(fake.getArgsForCall, struct {
		arg1 string
	}{arg1})
	fake.getMutex.Unlock()
	if fake.GetStub != nil {
		return fake.GetStub(arg1)
	} else {
		return fake.getReturns.result1, fake.getReturns.result2
	}
}

func (fake *FakeSpaceFactory) GetCallCount() int {
	fake.getMutex.RLock()
	defer fake.getMutex.RUnlock()
	return len(fake.getArgsForCall)
}

func (fake *FakeSpaceFactory) GetArgsForCall(i int) string {
	fake.getMutex.RLock()
	defer fake.getMutex.RUnlock()
	return fake.getArgsForCall[i].arg1
}

func (fake *FakeSpaceFactory) GetReturns(result1 space.Space, result2 error) {
	fake.GetStub = nil
	fake.getReturns = struct {
		result1 space.Space
		result2 error
	}{result1, result2}
}

func (fake *FakeSpaceFactory) SetBool(aSpace space.Space, key string, value bool) error {
	fake.setBoolMutex.Lock()
	fake.setBoolArgsForCall = append(fake.setBoolArgsForCall, struct {
		aSpace space.Space
		key    string
		value  bool
	}{aSpace, key, value})
	fake.setBoolMutex.Unlock()
	if fake.SetBoolStub != nil {
		return fake.SetBoolStub(aSpace, key, value)
	} else {
		return fake.setBoolReturns.result1
	}
}

func (fake *FakeSpaceFactory) SetBoolCallCount() int {
	fake.setBoolMutex.RLock()
	defer fake.setBoolMutex.RUnlock()
	return len(fake.setBoolArgsForCall)
}

func (fake *FakeSpaceFactory) SetBoolArgsForCall(i int) (space.Space, string, bool) {
	fake.setBoolMutex.RLock()
	defer fake.setBoolMutex.RUnlock()
	return fake.setBoolArgsForCall[i].aSpace, fake.setBoolArgsForCall[i].key, fake.setBoolArgsForCall[i].value
}

func (fake *FakeSpaceFactory) SetBoolReturns(result1 error) {
	fake.SetBoolStub = nil
	fake.setBoolReturns = struct {
		result1 error
	}{result1}
}

var _ space.SpaceFactory = new(FakeSpaceFactory)
