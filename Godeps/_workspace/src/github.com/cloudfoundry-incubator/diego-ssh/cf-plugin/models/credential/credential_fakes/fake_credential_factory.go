// This file was generated by counterfeiter
package credential_fakes

import (
	"sync"

	"github.com/cloudfoundry-incubator/diego-ssh/cf-plugin/models/credential"
)

type FakeCredentialFactory struct {
	GetStub        func() (credential.Credential, error)
	getMutex       sync.RWMutex
	getArgsForCall []struct{}
	getReturns     struct {
		result1 credential.Credential
		result2 error
	}
}

func (fake *FakeCredentialFactory) Get() (credential.Credential, error) {
	fake.getMutex.Lock()
	fake.getArgsForCall = append(fake.getArgsForCall, struct{}{})
	fake.getMutex.Unlock()
	if fake.GetStub != nil {
		return fake.GetStub()
	} else {
		return fake.getReturns.result1, fake.getReturns.result2
	}
}

func (fake *FakeCredentialFactory) GetCallCount() int {
	fake.getMutex.RLock()
	defer fake.getMutex.RUnlock()
	return len(fake.getArgsForCall)
}

func (fake *FakeCredentialFactory) GetReturns(result1 credential.Credential, result2 error) {
	fake.GetStub = nil
	fake.getReturns = struct {
		result1 credential.Credential
		result2 error
	}{result1, result2}
}

var _ credential.CredentialFactory = new(FakeCredentialFactory)
